{"version":3,"sources":["components/ResponsiveLineChart.jsx","components/ResponsiveAreaChart.jsx","components/ToggleButton.jsx","App.jsx","parseCsv.js","getCsvUrl.js","index.js","App.module.css"],"names":["ResponsiveLineChart","scale","data","config","width","minHeight","margin","top","right","left","bottom","strokeDasharray","verticalAlign","height","dataKey","domain","allowDataOverflow","map","lineProps","animationDuration","key","type","strokeWidth","ResponsiveAreaChart","ToggleButton","active","props","style","border","padding","fontSize","fontFamily","backgroundColor","color","outline","casosNovosConfig","name","stroke","casosAcumuladosConfig","fill","App","estados","BRASIL","React","useState","estado","setEstado","setScale","className","styles","Container","ButtonGroup","onClick","Object","keys","sort","sigla","slice","href","target","rel","parseCsv","url","Promise","resolve","Papa","parse","dynamicTyping","download","complete","header","keepEmptyRows","skipEmptyLines","transformHeader","test","getCsvUrl","a","fetch","credentials","headers","accept","referrer","referrerPolicy","body","method","mode","response","json","results","arquivo","mainComponent","document","getElementById","innerHTML","csv","dataGroupedBySigla","groupBy","dataGroupedByData","reduce","soma","curr","regiao","date","casosNovos","casosAcumulados","obitosNovos","obitosAcumulados","values","ReactDOM","render","StrictMode","main","module","exports"],"mappings":"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","file":"static/js/main.18f60794.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function ResponsiveLineChart({ scale, data, config }) {\n  return (\n    <ResponsiveContainer width=\"100%\" minHeight={350}>\n      <LineChart\n        data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={45} />\n        <XAxis dataKey=\"date\" />}\n        <YAxis scale={scale} domain={[0.99, \"dataMax\"]} allowDataOverflow />\n        {config.map((lineProps) => (\n          <Line\n            animationDuration={500}\n            key={lineProps.dataKey}\n            type=\"monotone\"\n            strokeWidth={2}\n            {...lineProps}\n          />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function ResponsiveAreaChart({ scale, data, config }) {\n  return (\n    <ResponsiveContainer width=\"100%\" minHeight={350}>\n      <AreaChart\n        data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" height={45} />\n        <XAxis dataKey=\"date\" />}\n        <YAxis scale={scale} domain={[0.99, \"dataMax\"]} allowDataOverflow />\n        {config.map((lineProps) => (\n          <Area\n            animationDuration={500}\n            key={lineProps.dataKey}\n            type=\"monotone\"\n            strokeWidth={2}\n            {...lineProps}\n          />\n        ))}\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\n\nexport default function ToggleButton({ active, ...props}) {\n  return (\n    <button\n      style={{\n        border: \"1px solid black\",\n        padding: \"0.4rem\",\n        fontSize: \"1.2rem\",\n        margin: \"0.1rem\",\n        fontFamily: \"monospace\",\n        backgroundColor: active ? \"black\" : \"white\",\n        color: active ? \"white\" : \"black\",\n        outline: \"none\",\n      }}\n      {...props}\n    />\n  );\n}\n","import React from \"react\";\nimport ResponsiveLineChart from \"./components/ResponsiveLineChart\";\nimport ResponsiveAreaChart from \"./components/ResponsiveAreaChart\";\nimport ToggleButton from \"./components/ToggleButton\";\nimport styles from \"./App.module.css\";\n\nconst casosNovosConfig = [\n  { dataKey: \"casosNovos\", name: \"Casos Novos\", stroke: \"#99d066\" },\n  { dataKey: \"obitosNovos\", name: \"Óbitos Novos\", stroke: \"#ff6659\" },\n];\n\nconst casosAcumuladosConfig = [\n  { dataKey: \"casosAcumulados\", name: \"Casos Acumulados\", stroke: \"#99d066\", fill: \"#99d066\" },\n  { dataKey: \"obitosAcumulados\", name: \"Óbitos Acumulados\", stroke: \"#ff6659\", fill: \"#ff6659\" },\n];\n\nfunction App({ data }) {\n  const { BRASIL, ...estados } = data;\n  const [estado, setEstado] = React.useState(\"BRASIL\");\n  const [scale, setScale] = React.useState(\"linear\");\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.ButtonGroup}>\n        <ToggleButton\n          onClick={() => setEstado(\"BRASIL\")}\n          active={estado === \"BRASIL\"}\n        >\n          BRASIL\n        </ToggleButton>\n        {Object.keys(estados)\n          .sort()\n          .map((sigla) => (\n            <ToggleButton\n              key={sigla}\n              onClick={() => setEstado(sigla)}\n              active={estado === sigla}\n            >\n              {sigla}\n            </ToggleButton>\n          ))}\n      </div>\n      <ResponsiveAreaChart\n        data={data[estado].slice(26)}\n        scale={scale}\n        config={casosAcumuladosConfig}\n      />\n      <div className={styles.ButtonGroup}>\n        <ToggleButton\n          onClick={() => setScale(\"linear\")}\n          active={\"linear\" === scale}\n        >\n          linear\n        </ToggleButton>\n        <ToggleButton onClick={() => setScale(\"log\")} active={\"log\" === scale}>\n          log\n        </ToggleButton>\n      </div>\n      <ResponsiveLineChart\n        data={data[estado].slice(26)}\n        scale=\"linear\"\n        config={casosNovosConfig}\n      />\n      <p>\n        Fonte:{\" \"}\n        <a\n          href=\"https://covid.saude.gov.br/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://covid.saude.gov.br/\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","import Papa from \"papaparse\";\n\nexport default function parseCsv(url) {\n  return new Promise((resolve) => {\n    Papa.parse(url, {\n      dynamicTyping: true,\n      download: true,\n      complete: resolve,\n      header: true,\n      keepEmptyRows: false,\n      skipEmptyLines: true,\n      transformHeader: function (header) {\n        if (/regi.o/.test(header)) {\n          return \"regiao\";\n        } else {\n          return header;\n        }\n      },\n    });\n  });\n}\n","export default async function getCsvUrl() {\n  const response = await fetch(\n    \"https://xx9p7hp1p7.execute-api.us-east-1.amazonaws.com/prod/PortalGeral\",\n    {\n      credentials: \"omit\",\n      headers: {\n        accept: \"application/json, text/plain, */*\",\n        \"accept-language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"cross-site\",\n        \"x-parse-application-id\": \"unAFkcaNDeXajurGB7LChj8SgQYS2ptm\",\n      },\n      referrer: \"https://covid.saude.gov.br/\",\n      referrerPolicy: \"no-referrer-when-downgrade\",\n      body: null,\n      method: \"GET\",\n      mode: \"cors\",\n    }\n  );\n  const json = await response.json();\n  return json?.results[0]?.arquivo?.url;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport groupBy from \"lodash.groupby\";\nimport App from \"./App\";\nimport parseCsv from \"./parseCsv\";\nimport getCsvUrl from \"./getCsvUrl\";\n\n\nasync function main() {\n  const mainComponent = document.getElementById(\"root\")\n  mainComponent.innerHTML = `<p>Obtendo endereço do CSV...</p>`;\n  const url = await getCsvUrl();\n\n  mainComponent.innerHTML = `<p>Obtendo CSV de ${url}...</p>`;\n  const csv = await parseCsv(url);\n\n  const dataGroupedBySigla = groupBy(csv.data, \"sigla\");\n  const dataGroupedByData = groupBy(csv.data, \"date\");\n\n  for (let key in dataGroupedByData) {\n    dataGroupedByData[key] = dataGroupedByData[key].reduce((soma, curr) => {\n      return {\n        sigla: \"BRASIL\",\n        regiao: \"BRASIL\",\n        date: key,\n        casosNovos: (soma.casosNovos || 0) + curr.casosNovos,\n        casosAcumulados: (soma.casosAcumulados || 0) + curr.casosAcumulados,\n        obitosNovos: (soma.obitosNovos || 0) + curr.obitosNovos,\n        obitosAcumulados: (soma.obitosAcumulados || 0) + curr.obitosAcumulados,\n      };\n    });\n  }\n  dataGroupedBySigla[\"BRASIL\"] = Object.values(dataGroupedByData);\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App data={dataGroupedBySigla} />\n    </React.StrictMode>,\n    mainComponent\n  );\n}\n\nmain();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__10KOh\",\"ButtonGroup\":\"App_ButtonGroup__JyEnA\"};"],"sourceRoot":""}