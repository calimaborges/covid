{"version":3,"sources":["components/ToggleButton.module.css","parseCsv.js","getCsvInfo.js","ErrorBoundary.jsx","components/ResponsiveLineChart.jsx","components/ResponsiveAreaChart.jsx","components/ToggleButton.jsx","components/CounterBox.jsx","App.jsx","index.js","App.module.css","components/CounterBox.module.css"],"names":["module","exports","parseCsv","csvString","a","Promise","resolve","Papa","parse","dynamicTyping","complete","header","keepEmptyRows","skipEmptyLines","transformHeader","getCsvInfo","fetch","credentials","headers","accept","referrer","referrerPolicy","body","method","mode","response","json","url","results","arquivo","dataAtualizacao","dt_atualizacao","ErrorBoundary","props","state","hasError","error","errorInfo","Sentry","scope","setExtras","eventId","setState","this","errorMessage","toString","href","children","React","Component","ResponsiveLineChart","scale","data","config","reference","width","minHeight","margin","top","right","left","bottom","strokeDasharray","dataKey","allowDataOverflow","x","stroke","map","lineProps","animationDuration","key","type","strokeWidth","domain","ResponsiveAreaChart","scaleLog","base","ToggleButton","active","className","styles","Button","style","backgroundColor","color","CounterBox","legend","amount","textColor","bgColor","LightenDarkenColor","Container","border","Legend","Content","toLocaleString","novosConfig","name","acumuladosConfig","fill","App","estados","BRASIL","useState","setScale","estado","setEstado","relevantData","slice","length","currentBox","setCurrentBox","ButtonGroup","onClick","Object","keys","sort","sigla","BoxGroupTitle","BoxGroup","disabled","casosAcumulados","obitosAcumulados","casosNovos","obitosNovos","textAlign","target","rel","process","NODE_ENV","dsn","console","log","mainComponent","document","getElementById","innerHTML","text","multipleCsvString","split","csv","dataGroupedBySigla","groupBy","dataGroupedByData","reduce","soma","curr","regiao","values","ReactDOM","render","StrictMode","main"],"mappings":"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","file":"static/js/main.bc4d2f5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ToggleButton_Button__27Raf\"};","import Papa from \"papaparse\";\n\nexport default async function parseCsv(csvString) {\n  return new Promise((resolve) => {\n    Papa.parse(csvString, {\n      dynamicTyping: true,\n      complete: resolve,\n      header: true,\n      keepEmptyRows: false,\n      skipEmptyLines: true,\n      transformHeader: function (header) {\n        // region;sigla;date;cases_inc;cases;deaths_inc;deaths\n        switch (header) {\n          case \"region\": return \"regiao\";\n          case \"estado\": return \"sigla\";\n          case \"date\": return \"data\";\n          case \"cases_inc\": return \"casosNovos\";\n          case \"cases\": return \"casosAcumulados\";\n          case \"deaths_inc\": return \"obitosNovos\";\n          case \"deaths\": return \"obitosAcumulados\";\n          default: return header;\n        }\n      },\n    });\n  });\n}\n","export default async function getCsvInfo() {\n  const response = await fetch(\n    \"https://xx9p7hp1p7.execute-api.us-east-1.amazonaws.com/prod/PortalGeral\",\n    {\n      credentials: \"omit\",\n      headers: {\n        accept: \"application/json, text/plain, */*\",\n        \"accept-language\": \"pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"sec-fetch-dest\": \"empty\",\n        \"sec-fetch-mode\": \"cors\",\n        \"sec-fetch-site\": \"cross-site\",\n        \"x-parse-application-id\": \"unAFkcaNDeXajurGB7LChj8SgQYS2ptm\",\n      },\n      referrer: \"https://covid.saude.gov.br/\",\n      referrerPolicy: \"no-referrer-when-downgrade\",\n      body: null,\n      method: \"GET\",\n      mode: \"cors\",\n    }\n  );\n  const json = await response.json();\n  return {\n    url: json?.results[0]?.arquivo?.url,\n    dataAtualizacao: json?.results[0]?.dt_atualizacao,\n  };\n}\n","import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n      this.setState({ eventId });\n    });\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      const error = this.state.error;\n      const errorMessage = error.toString\n        ? error.toString()\n        : \"Erro desconhecido.\";\n      return (\n        <>\n          <h1>Ops...</h1>\n          <p>\n            Provavelmente houve alguma falha ao ler o CSV fornecido. Acesse{\" \"}\n            <a href=\"https://covid.saude.gov.br\">https://covid.saude.gov.br</a>{\" \"}\n            até o problema ser corrigido\n          </p>\n          <p>ID: {this.state.eventId}</p>\n          <p>{errorMessage}</p>\n        </>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function ResponsiveLineChart({ scale, data, config, reference }) {\n  return (\n    <ResponsiveContainer width=\"100%\" minHeight={350}>\n      <LineChart\n        data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <XAxis dataKey=\"data\" />}\n        <YAxis scale={scale} allowDataOverflow />\n        <ReferenceLine x={data[reference].data} stroke=\"black\" />\n        {config.map((lineProps) => (\n          <Line\n            animationDuration={500}\n            key={lineProps.dataKey}\n            type=\"monotone\"\n            strokeWidth={2}\n            {...lineProps}\n          />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  ReferenceLine,\n} from \"recharts\";\nimport { scaleLog } from \"d3-scale\";\nlet domain = [0, \"dataMax\"];\n\nexport default function ResponsiveAreaChart({\n  scale,\n  data,\n  config,\n  reference,\n}) {\n  if (scale === \"log\") {\n    scale = scaleLog().base(10);\n    domain = [1, \"dataMax\"];\n  }\n  return (\n    <ResponsiveContainer width=\"100%\" minHeight={350}>\n      <AreaChart\n        data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <XAxis dataKey=\"data\" />}\n        <YAxis scale={scale} domain={domain} allowDataOverflow />\n        <ReferenceLine x={data[reference].data} stroke=\"black\" />\n        {config.map((lineProps) => (\n          <Area\n            animationDuration={500}\n            key={lineProps.dataKey}\n            type=\"monotone\"\n            strokeWidth={2}\n            {...lineProps}\n          />\n        ))}\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport styles from \"./ToggleButton.module.css\";\n\nexport default function ToggleButton({ active, ...props }) {\n  return (\n    <button\n      className={styles.Button}\n      style={{\n        backgroundColor: active ? \"black\" : \"white\",\n        color: active ? \"white\" : \"black\",\n      }}\n      {...props}\n    />\n  );\n}\n","import React from \"react\";\nimport { LightenDarkenColor } from \"lighten-darken-color\";\nimport styles from \"./CounterBox.module.css\";\n\nexport default function CounterBox({\n  legend,\n  amount,\n  textColor,\n  bgColor,\n  color = \"#cccccc\",\n}) {\n  bgColor = bgColor || LightenDarkenColor(color, 120).toString();\n  textColor = textColor || LightenDarkenColor(color, -120).toString();\n  return (\n    <div\n      className={styles.Container}\n      style={{\n        backgroundColor: bgColor,\n        border: `2px solid ${color}`,\n        color: textColor,\n      }}\n    >\n      <legend className={styles.Legend}>{legend}</legend>\n      <div className={styles.Content}>{amount?.toLocaleString(\"pt-BR\")}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ResponsiveLineChart from \"./components/ResponsiveLineChart\";\nimport ResponsiveAreaChart from \"./components/ResponsiveAreaChart\";\nimport ToggleButton from \"./components/ToggleButton\";\nimport CounterBox from \"./components/CounterBox\";\nimport styles from \"./App.module.css\";\n\nconst novosConfig = [\n  { dataKey: \"casosNovos\", name: \"Casos novos\", stroke: \"#99d066\" },\n  { dataKey: \"obitosNovos\", name: \"Óbitos novos\", stroke: \"#ff6659\" },\n];\n\nconst acumuladosConfig = [\n  {\n    dataKey: \"casosAcumulados\",\n    name: \"Casos acumulados\",\n    stroke: \"#99d066\",\n    fill: \"#99d066\",\n  },\n  {\n    dataKey: \"obitosAcumulados\",\n    name: \"Óbitos acumulados\",\n    stroke: \"#ff6659\",\n    fill: \"#ff6659\",\n  },\n];\n\nfunction App({ data, dataAtualizacao }) {\n  const { BRASIL, ...estados } = data;\n  const [scale, setScale] = React.useState(\"linear\");\n  const [estado, setEstado] = React.useState(\"BRASIL\");\n\n  const relevantData = data[estado].slice(26);\n  const [currentBox, setCurrentBox] = React.useState(relevantData.length - 1);\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.ButtonGroup}>\n        <ToggleButton\n          onClick={() => setEstado(\"BRASIL\")}\n          active={estado === \"BRASIL\"}\n        >\n          BRASIL\n        </ToggleButton>\n        {Object.keys(estados)\n          .sort()\n          .map((sigla) => (\n            <ToggleButton\n              key={sigla}\n              onClick={() => setEstado(sigla)}\n              active={estado === sigla}\n            >\n              {sigla}\n            </ToggleButton>\n          ))}\n      </div>\n      <div className={styles.BoxGroupTitle}>\n        {relevantData[currentBox].data}\n      </div>\n      <div className={styles.BoxGroup}>\n        <button\n          disabled={currentBox === 0}\n          onClick={() => setCurrentBox(currentBox - 1)}\n        >\n          {\"<\"}\n        </button>\n        <CounterBox\n          legend={acumuladosConfig[0].name}\n          color={acumuladosConfig[0].stroke}\n          amount={relevantData[currentBox].casosAcumulados}\n        />\n        <CounterBox\n          legend={acumuladosConfig[1].name}\n          color={acumuladosConfig[1].stroke}\n          amount={relevantData[currentBox].obitosAcumulados}\n        />\n        <CounterBox\n          legend={novosConfig[0].name}\n          color={novosConfig[0].stroke}\n          amount={relevantData[currentBox].casosNovos}\n          bgColor=\"#ffffff\"\n        />\n        <CounterBox\n          legend={novosConfig[1].name}\n          color={novosConfig[1].stroke}\n          amount={relevantData[currentBox].obitosNovos}\n          bgColor=\"#ffffff\"\n        />\n        <button\n          disabled={currentBox === relevantData.length - 1}\n          onClick={() => setCurrentBox(currentBox + 1)}\n        >\n          {\">\"}\n        </button>\n      </div>\n\n      <h3>Acumulado</h3>\n      <ResponsiveAreaChart\n        data={relevantData}\n        scale={scale}\n        config={acumuladosConfig}\n        reference={currentBox}\n      />\n      <div className={styles.ButtonGroup}>\n        <ToggleButton\n          onClick={() => setScale(\"linear\")}\n          active={\"linear\" === scale}\n        >\n          linear\n        </ToggleButton>\n        <ToggleButton onClick={() => setScale(\"log\")} active={\"log\" === scale}>\n          log\n        </ToggleButton>\n      </div>\n\n      <h3>Novos</h3>\n      <ResponsiveLineChart\n        data={relevantData}\n        scale=\"linear\"\n        config={novosConfig}\n        reference={currentBox}\n      />\n      <p style={{ textAlign: \"center\" }}>\n        Fonte:{\" \"}\n        <a\n          href=\"https://covid.saude.gov.br/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://covid.saude.gov.br/\n        </a>\n        <br />\n        Última atualização: {dataAtualizacao}\n      </p>\n\n      <p style={{ textAlign: \"center\" }}>\n        <a\n          href=\"https://github.com/calimaborges/covid.git\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","import \"typeface-roboto-condensed\";\nimport \"typeface-roboto-mono\";\nimport \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport groupBy from \"lodash.groupby\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./App\";\nimport parseCsv from \"./parseCsv\";\nimport getCsvInfo from \"./getCsvInfo\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nif (process?.env?.NODE_ENV === \"production\") {\n  Sentry.init({\n    dsn:\n      \"https://35cad82a71fd411490b2c9891acb863a@o43943.ingest.sentry.io/5196657\",\n  });\n  console.log(\"Sentry ativado.\");\n} else {\n  console.log(\"Sentry desativado.\", `NODE_ENV: ${process?.env?.NODE_ENV}`);\n}\n\nasync function main() {\n  const mainComponent = document.getElementById(\"root\");\n  mainComponent.innerHTML = `<p>Obtendo endereço do CSV...</p>`;\n  const { url, dataAtualizacao } = await getCsvInfo();\n\n  mainComponent.innerHTML = `<p>Baixando CSV de ${url}...</p>`;\n  const response = await fetch(url);\n  const multipleCsvString = await response.text();\n  const [csvString] = multipleCsvString.split(\";;;;;;\");\n\n  mainComponent.innerHTML = `<p>Convertendo CSV...</p>`;\n  const csv = await parseCsv(csvString);\n\n  const dataGroupedBySigla = groupBy(csv.data, \"sigla\");\n  const dataGroupedByData = groupBy(csv.data, \"data\");\n\n  for (let key in dataGroupedByData) {\n    dataGroupedByData[key] = dataGroupedByData[key].reduce((soma, curr) => {\n      return {\n        sigla: \"BRASIL\",\n        regiao: \"BRASIL\",\n        data: key,\n        casosNovos: (soma.casosNovos || 0) + curr.casosNovos,\n        casosAcumulados: (soma.casosAcumulados || 0) + curr.casosAcumulados,\n        obitosNovos: (soma.obitosNovos || 0) + curr.obitosNovos,\n        obitosAcumulados: (soma.obitosAcumulados || 0) + curr.obitosAcumulados,\n      };\n    });\n  }\n  dataGroupedBySigla[\"BRASIL\"] = Object.values(dataGroupedByData);\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <ErrorBoundary>\n        <App data={dataGroupedBySigla} dataAtualizacao={dataAtualizacao} />\n      </ErrorBoundary>\n    </React.StrictMode>,\n    mainComponent\n  );\n}\n\nmain();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__10KOh\",\"ButtonGroup\":\"App_ButtonGroup__JyEnA\",\"BoxGroup\":\"App_BoxGroup__tpGwB\",\"BoxGroupTitle\":\"App_BoxGroupTitle__2tUtS\",\"Alert\":\"App_Alert__3Zd3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"CounterBox_Container__a_uh2\",\"Legend\":\"CounterBox_Legend__1n7vI\",\"Content\":\"CounterBox_Content__XDU3C\"};"],"sourceRoot":""}